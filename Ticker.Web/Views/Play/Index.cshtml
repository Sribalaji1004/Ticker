@{
    ViewBag.Title = "Play Test";
}

@model IEnumerable<Ticker.Data.Client>
<div>
    <div style="float: left">
        <h2>Ticker Play Test</h2>
    </div>
    <div style="float: right">@(Html.Kendo().DropDownList()
  .Name("ddlClients") //The name of the dropdownlist is mandatory. It specifies the "id" attribute of the widget.
  .DataTextField("Description") //Specifies which property of the Product to be used by the dropdownlist as a text.
  .DataValueField("ID") //Specifies which property of the Product to be used by the dropdownlist as a value.
  .BindTo(Model)   //Pass the list of Products to the dropdownlist.
  .SelectedIndex(15) //Select an item with index 10\. Note that the indexes are zero based.
)
    </div>
    <div style="clear: both;" />
    <div>
        @(Html.Kendo().DropDownList()
        .Name("ddlPlaylist")
        .DataTextField("Name")
        .DataValueField("ID")
        .DataSource(dataSource => dataSource
        .Read(read => read.Url("api/Playlist").Type(HttpVerbs.Get).Data("filterPlaylists"))
        .ServerFiltering(true)
        )
        .CascadeFrom("ddlClients")
        )
        <script>
            function filterPlaylists() {
                return {
                    ID: $("#ddlClients").val()
                };
            }
        </script>
        <br />
        <button id="cmdPlay" title="Play">Play</button>
        &nbsp;
        <button id="cmdStop" title="Stop">Stop</button>
        <form method="POST" action="">
            <input type="button" id="cmdPlay" value="Play" />
            &nbsp;
            <input type="Submit" name="Stop" value="Stop" />
            <!--Script references. -->
            <!--Reference the jQuery library. -->
            <!--<script src="~/Scripts/jquery-1.9.1.min.js"></script>-->
            <!--Reference the SignalR library. -->
            <script src="Scripts/jquery.signalR-1.0.0.min.js"></script>
            <!--Reference the autogenerated SignalR hub script. -->
            <script src="signalr/hubs"></script>
            <!--Add script to update the page and send messages.-->
            <script type="text/javascript">
                $(function () {
                    // Declare a proxy to reference the hub. 
                    var ticker = $.connection.tickerHub;

                    // Start the connection.
                    $.connection.hub.start().done(function () {
                        $('#cmdPlay').click(function () {
                            // Call the Send method on the hub. 
                            ticker.server.play(1);
                        });
                    });
                });
            </script>
        </form>
        @{
    //if (IsPost)
    //{
    //    Ticker.Hubs.TickerHub th = new Ticker.Hubs.TickerHub();
    //    th.Play(1);
    //}
        }
    </div>
</div>
<div style="clear: both;" />
